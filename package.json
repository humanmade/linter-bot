{
  "private": true,
  "dependencies": {
    "@humanmade/probot-util": "^0.2.0",
    "babel-polyfill": "6.16.0",
    "lodash.chunk": "^4.2.0",
    "module-alias": "^2.1.0",
    "parse-diff": "^0.4.0",
    "pify": "^3.0.0",
    "probot": "^6.1.0",
    "rimraf": "^2.6.2",
    "serialize-error": "^2.1.0",
    "smee-client": "^1.0.1",
    "tar": "^4.0.1"
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "6.17.0",
    "babel-plugin-transform-runtime": "6.15.0",
    "babel-polyfill": "6.16.0",
    "babel-preset-es2015": "6.16.0",
    "babel-preset-stage-0": "6.16.0",
    "dotenv": "^5.0.1",
    "run.env": "^1.1.0"
  },
  "scripts": {
    "build:babel": "( rm -rf build || true ) && mkdir build && babel src --out-dir build --ignore src/linters/phpcs/vendor -D",
    "build:bin": "aws s3 sync s3://hm-linter/bin ./bin && chmod +x ./bin/*",
    "build:npm": "docker run --rm -v \"${PWD}\":/var/task lambci/lambda:build-nodejs8.10 npm install",
    "build": "npm run build:babel && npm run build:bin && npm run build:npm",
    "clean:package": "( test -f lambda-function.zip && rm lambda-function.zip ) || true",
    "deploy:check": "test -f bin/php && test -f production.private-key.pem",
    "deploy:check-dev": "test -f bin/php && test -f development.private-key.pem",
    "deploy:package": "zip --symlinks -9 -x lambda-function.zip -x \"src/*\" -r lambda-function *",
    "deploy:package-dev": "npm run deploy:package && cp development.private-key.pem private-key.pem && zip -9 lambda-function private-key.pem",
    "deploy:package-production": "npm run deploy:package && cp production.private-key.pem private-key.pem && zip -9 lambda-function private-key.pem",
    "deploy:push": "NODE_ENV=production run.env scripts/deploy.sh",
    "deploy:push-dev": "NODE_ENV=development run.env scripts/deploy.sh",
    "deploy": "npm run clean:package && npm run build && npm run deploy:check && npm run deploy:package-production && npm run deploy:push",
    "deploy:dev": "npm run clean:package && npm run build && npm run deploy:check-dev && npm run deploy:package-dev && npm run deploy:push-dev",
    "start": "node start-development.js",
    "test": "docker run -e \"APP_ID=5455\" -e \"WEBHOOK_SECRET=development\" -v \"$PWD\":/var/task lambci/lambda:nodejs8.10 index.probotHandler \"$AWS_LAMBDA_EVENT_BODY\""
  }
}
