{
  "private": true,
  "dependencies": {
    "@humanmade/probot-util": "^0.2.0",
    "graceful-fs": "^4.2.4",
    "lodash.chunk": "^4.2.0",
    "module-alias": "^2.1.0",
    "parse-diff": "^0.4.0",
    "pify": "^3.0.0",
    "probot": "^6.1.0",
    "rimraf": "^2.6.2",
    "serialize-error": "^2.1.0",
    "smee-client": "^1.0.1",
    "tar": "^4.0.1"
  },
  "devDependencies": {
    "dotenv": "^5.0.1",
    "nodemon": "^2.0.4",
    "run.env": "^1.1.0"
  },
  "scripts": {
    "build:babel-watch": "babel src --out-dir build --ignore src/linters/phpcs/vendor -D -w",
    "build:bin": "aws s3 sync s3://hm-linter/bin ./bin && chmod +x ./bin/*",
    "build:lib": "aws s3 sync s3://hm-linter/lib ./lib && chmod +x ./lib/*",
    "build:npm": "docker run --rm -v \"${PWD}\":/var/task lambci/lambda:build-nodejs12.x npm install",
    "build": "npm run build:bin && npm run build:lib && npm run build:npm",
    "clean:package": "( test -f lambda-function.zip && rm lambda-function.zip ) || true",
    "deploy:check": "test -f bin/php && test -f lib/libcrypt.so && test -f production.private-key.pem",
    "deploy:check-dev": "test -f bin/php && test -f lib/libcrypt.so && test -f development.private-key.pem",
    "deploy:package": "zip --symlinks -9 -x lambda-function.zip -r lambda-function *",
    "deploy:package-dev": "npm run deploy:package && cp development.private-key.pem private-key.pem && zip -9 lambda-function private-key.pem",
    "deploy:package-production": "npm run deploy:package && cp production.private-key.pem private-key.pem && zip -9 lambda-function private-key.pem",
    "deploy:push": "NODE_ENV=production run.env scripts/deploy.sh",
    "deploy:push-dev": "NODE_ENV=development run.env scripts/deploy.sh",
    "deploy": "npm run clean:package && npm run build && npm run deploy:check && npm run deploy:package-production && npm run deploy:push",
    "deploy:dev": "npm run clean:package && npm run build && npm run deploy:check-dev && npm run deploy:package-dev && npm run deploy:push-dev",
    "start": "docker run -it --rm --env-file .env.dev -e NO_UPDATE_NOTIFIER=1 -v \"$PWD\":/var/task:ro --entrypoint /var/task/node_modules/.bin/nodemon lambci/lambda:nodejs12.x /var/task/start-development.js",
    "test": "docker run -i --rm --env-file .env -e DOCKER_LAMBDA_USE_STDIN=1 -v \"$PWD\":/var/task:ro lambci/lambda:nodejs12.x index.probotHandler"
  }
}
